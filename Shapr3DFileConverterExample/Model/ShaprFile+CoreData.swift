//
//  ShaprFile.swift
//  Shaper3DImport
//
//  Created by Aldrich Co on 7/11/20.
//  Copyright Â© 2020 Aldrich Co. All rights reserved.
//

import Foundation
import CoreData
import UIKit
import Shapr3DFileConverter

extension ShaprFile {
	
	init(fileEntity: Base3DFormat) {
		
		// note that with NSManagedObjects being autogenerated, some properties
		// that were marked non-optional still were generated to have optional
		// designation.
		let thumbData = fileEntity.imageThumbnail

		let imageData = fileEntity.imageFull
		
		let scale = UIScreen.main.scale
		
		let formatsArray = fileEntity.derivedFormats?.allObjects as? [Derived3DFormat]
		
		let derivedFormats: [DerivedFileFormat] = formatsArray?.compactMap { file in
			// !! improve fileExtension loading.
			
			DerivedFileFormat(size: file.size,
							  created: file.created ?? Date(),
							  fileExtension: FileExtension(rawValue: file.fileExtension!)!,
							  convertProgress: CGFloat(file.convertProgress))
		} ?? []
		
		self.init(filename: fileEntity.filename ?? "",
				  size: fileEntity.size,
				  created: fileEntity.created ?? Date(),
				  image: imageData != nil ? UIImage(data: imageData!, scale: scale) : nil,
				  thumbnail: thumbData != nil ? UIImage(data: thumbData!, scale: scale) : nil,
				  derivedFormats: derivedFormats)
	}
	
	func toEntity(in context: NSManagedObjectContext) -> Base3DFormat {
		let file = Base3DFormat(context: context)
		file.filename = self.filename
		file.size = self.size
		file.imageThumbnail = self.thumbnail?.pngData()
		file.imageFull = self.image?.pngData()
		
		let formats: [Derived3DFormat] = derivedFormats.map { (derivedFormat: DerivedFileFormat) in
			let format = Derived3DFormat(context: context)
			format.base = file
			format.convertProgress = Float(derivedFormat.convertProgress)
			format.created = derivedFormat.created
			format.fileExtension = derivedFormat.fileExtension.rawValue
			format.size = derivedFormat.size
			return format
		}
		
		file.derivedFormats = NSSet(array: formats)
		
		file.created = self.created
		return file
	}
}
